{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lpassword","formLoginValues","handleLoginInputChange","rName","rEmail","rpassword1","rpassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8443f4bf.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartAddNew: '[event] Set Active',\r\n    eventLogout:'[event] Logout event',\r\n\r\n    eventSetActive: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] clear active event',\r\n    \r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded:'[event] Event loaded',\r\n    \r\n    \r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    events : [],\r\n    activeEvent:null\r\n\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent:null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n        return{\r\n            ...initialState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/* \r\nimport moment from \"moment\"\r\n{\r\n    id: new Date().getTime(),\r\n    title: 'Cumple de marcos',\r\n    start: moment().toDate(), //new date\r\n    end: moment().add(2,'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar la torta',\r\n    user:{\r\n        _id:'123',\r\n        name: 'Marcos'\r\n    }\r\n} */","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n    modalOpen: false,\r\n\r\n}\r\nexport const uiReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { createStore,compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n\r\nconst fetchSinToken = (endpoint,data,method='GET') =>{\r\n\r\n    const url = `${baseUrl}/${endpoint}` //localhost:4000/api/      endpoint /auth o /events\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url)\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\nconst fetchConToken = (endpoint,data,method='GET') =>{\r\n\r\n    const url = `${baseUrl}/${endpoint}` //localhost:4000/api/      endpoint /auth o /events\r\n\r\n    const token = localStorage.getItem('token')||'';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        })\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\"\r\n\r\n\r\n\r\n\r\nexport const prepareEvents = (events=[]) =>{\r\n\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate(),\r\n\r\n        })\r\n    )\r\n}","\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState ) => {\r\n\r\n       const {uid,name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events',event,'POST');\r\n            const body = await resp.json()\r\n\r\n            \r\n            if(body.ok){\r\n            event.id = body.evento.id\r\n            event.user = {\r\n                _id: uid,\r\n                name: name\r\n            }\r\n            dispatch(eventAddNew(event))\r\n            \r\n        }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStarDelete = () => {\r\n    return async (dispatch,getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos)\r\n\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            \r\n        }\r\n        //console.log('eventStartLoading')\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded,\r\n    payload:events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","\r\nimport Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin= (email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchSinToken('auth',{email,password},'POST');\r\n        const body = await resp.json()\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n        \r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }))\r\n    }else{\r\n        Swal.fire('Error',body.msg,'error')\r\n    }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email,password,name)=>{\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchSinToken('auth/new',{email,password,name},'POST');\r\n        const body = await resp.json()\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n        \r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }))\r\n    }else{\r\n        Swal.fire('Error',body.msg,'error')\r\n    }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () =>{\r\n    return async (dispatch) => {\r\n        \r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json()\r\n\r\n       // console.log(body)\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n        \r\n        dispatch(login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }))\r\n    }else{\r\n        dispatch(checkingFinish())\r\n    }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) =>({\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        localStorage.clear()\r\n        dispatch(eventLogout())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type:types.authLogout})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\n\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formLoginValues, handleLoginInputChange] = useForm( {\r\n        lEmail: 'Marcos@gmail.com',\r\n        lpassword: '123456'\r\n    } );\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm( {\r\n            rName: 'Javier',\r\n            rEmail: 'Javier@gmail.com',\r\n            rpassword1: '123456',\r\n            rpassword2: '123456'\r\n    } );\r\n        \r\n    const { rEmail, rName, rpassword2, rpassword1} = formRegisterValues;\r\n    \r\n\r\n\r\n    \r\n    const {lEmail,lpassword} = formLoginValues\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lpassword))\r\n    }\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n        if(rpassword1!== rpassword2) {\r\n            return Swal.fire('Error','Las contraseñas deben de ser iguales')\r\n        }\r\n        dispatch(startRegister(rEmail,rpassword1,rName))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lpassword\"\r\n                                value={lpassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rpassword2\"\r\n                                value={rpassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rpassword1\"\r\n                                value={rpassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout()) \r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n        <button className=\"btn btn-outline-danger\"onClick={handleLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            <span>Salir</span>\r\n        </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title,user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { /* eventUpdated,eventAddNew, */ eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  Modal.setAppElement('#root');  \r\n\r\n  const now = moment().minutes(0).seconds(0).add(1,'hours'); \r\n  const nowPlus1 = now.clone().add(1,'hours')\r\n\r\n  const initEvent = {\r\n      title: '',\r\n      notes: '',\r\n      start: now.toDate(),\r\n      end: nowPlus1.toDate()\r\n  }\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch()\r\n    \r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate()) \r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const {notes,title,start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else{\r\n            setFormValues(initEvent)\r\n        }\r\n\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange=({target }) =>{\r\n        setFormValues({\r\n            ...formValues,[target.name]: target.value\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const closeModal = () =>{\r\n        // TODO: cerrar modal\r\n        // setIsOpen(false)\r\n        \r\n        //console.log('cerrar modal')\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    }\r\n\r\n    const handleStartDateChange = (e) =>{\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n        //console.log(e)\r\n    }\r\n    const handleEndDateChange = (e) =>{\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n        //console.log(e)\r\n    }\r\n\r\n    const handleSubmitForm=(e) =>{\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment (start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error','La fecha fin debe ser mayor a la fecha de inicio','error');\r\n        }\r\n        if(title.trim().length<2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO: realizar grabación en la base de datos\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n\r\n            dispatch(eventStartAddNew(formValues))\r\n         /*    dispatch(eventAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user:{\r\n                    _id: '123',\r\n                    name: 'Marcos'\r\n                }\r\n            })) */\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n        //console.log(formValues)\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n\r\n      >        \r\n                    <h1> {(activeEvent)?'Editar evento': 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form \r\n            className=\"container\"\r\n            onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className= \"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className= \"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid'} `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n  </Modal>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch() \r\n\r\n    const handleClickNew =()=>{\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStarDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch() \r\n\r\n    const handleDelete = () =>{\r\n        dispatch(eventStarDelete())\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport moment from 'moment'\r\nimport { Navbar } from './../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n/* const events = [{\r\n    title: 'Cumple de marcos',\r\n    start: moment().toDate(), //new date\r\n    end: moment().add(2,'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar la torta',\r\n    user:{\r\n        _id:'123',\r\n        name: 'Marcos'\r\n    }\r\n}] */\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    //TODO leer del store los eventos\r\n    const {events,activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView')||'month')\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        //console.log('abrir modal');\r\n        dispatch(uiOpenModal())\r\n\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n       // dispatch(uiOpenModal())\r\n    }\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e)\r\n    }\r\n\r\n    const onSelectSlot = (e) =>{\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected) =>{\r\n\r\n       // console.log(event)\r\n        const style = {\r\n            backgroundColor: (uid===event.user._id)?'#367CF7':'#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter = {eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n                <AddNewFab/>\r\n                {\r\n                    (activeEvent) && <DeleteEventFab/>\r\n                }\r\n\r\n\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../../actions/auth';\r\n\r\nimport { LoginScreen } from './../auth/LoginScreen';\r\nimport { CalendarScreen } from './../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const {checking,uid} = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return<h5>Espere...</h5>\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact path=\"/\" \r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n\r\n                </Switch>\r\n            </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './components/router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}